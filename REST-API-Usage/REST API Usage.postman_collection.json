{
	"variables": [],
	"info": {
		"name": "REST API Usage",
		"_postman_id": "f30301ea-8f0e-2285-2b0d-ff8dc2fe57cd",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "gets all public gists",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"",
							"tests[\"Getting public Gists returns 30 Gists\"] = object.length === 30;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/public",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Checks if getting public Gists returns 30 Gists."
			},
			"response": []
		},
		{
			"name": "gets wolford gists",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"",
							"tests[\"The user `wolfordj` has at least one public Gist\"] = object.length >= 1;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/users/wolfordj/gists",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Checks if user 'wolford' has at least one public gist"
			},
			"response": []
		},
		{
			"name": "get joneric gists",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var gistsObject = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"gist_count\",responseBody);"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/users/joneric/gists",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Creates a Environment object variable of joneric's gists"
			},
			"response": []
		},
		{
			"name": "add gist to joneric",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"A Gist was created\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"I created a Gist!\",\n  \"public\": true,\n  \"files\": {\n    \"file1.txt\": {\n      \"content\": \"String file contents\"\n    }\n  }\n}"
				},
				"description": "Creates a Gist for user 'joneric'"
			},
			"response": []
		},
		{
			"name": "confirm gist count increased",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"var new_gist_count = JSON.parse(postman.getEnvironmentVariable(\"gist_count\"));",
							"tests[\"The Gist count for user 'joneric' has increased by 1\"] = object.length === new_gist_count.length + 1;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/users/joneric/gists",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Confirms the gist count has increaed by 1"
			},
			"response": []
		},
		{
			"name": "confirms contents of added gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"",
							"tests[\"The contents of the created Gist matchs the contents sent\"] = object[0].description === \"I created a Gist!\";"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/users/joneric/gists",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Checks if the created Gist matches what was sent"
			},
			"response": []
		},
		{
			"name": "gets original gist description",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"",
							"tests[\"Edited Gist description: 'I created a Gist!'\"] = object.description === \"I created a Gist!\";"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/d7e7bc67663e8d493efa3b5509e894ab",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Show the Gist description prior to edit"
			},
			"response": []
		},
		{
			"name": "updates gist description",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Edit of Gist worked\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/d7e7bc67663e8d493efa3b5509e894ab",
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"I changed the description of this gist\"\n}"
				},
				"description": "Updated description of Gist"
			},
			"response": []
		},
		{
			"name": "confirms gist description update",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var object = JSON.parse(responseBody);",
							"",
							"tests[\"Edited Gist description: 'I changed the description of this gist'\"] = object.description === \"I changed the description of this gist\";"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/d7e7bc67663e8d493efa3b5509e894ab",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "Show the Gist description after the edit"
			},
			"response": []
		},
		{
			"name": "add a star",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Added a star to a Gist\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/d7e7bc67663e8d493efa3b5509e894ab/star",
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {},
				"description": "Adds a start to a Gist"
			},
			"response": []
		},
		{
			"name": "check if start was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var new_gist_star = \"d7e7bc67663e8d493efa3b5509e894ab\";",
							"tests[\"Added Star has been confirmed\"] = responseBody.has(new_gist_star);"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/starred",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {},
				"description": "Show the Gist description prior to PATCH"
			},
			"response": []
		},
		{
			"name": "delete a star",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Removed a star from a Gist\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/d7e7bc67663e8d493efa3b5509e894ab/star",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {},
				"description": "Show the Gist description prior to PATCH"
			},
			"response": []
		},
		{
			"name": "check if star was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var new_gist_star = \"d7e7bc67663e8d493efa3b5509e894ab\";",
							"tests[\"Removed Star has been confirmed\"] = !(responseBody.has(new_gist_star));"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/starred",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {},
				"description": "Show the Gist description prior to PATCH"
			},
			"response": []
		},
		{
			"name": "delete a gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"A Gist was deleted\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"url": "https://api.github.com/gists/fca2f8918997c311f5aff8580ca45627",
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthToken}}",
						"description": ""
					}
				],
				"body": {},
				"description": "Delete a Gist"
			},
			"response": []
		}
	]
}